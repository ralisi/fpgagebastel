//   ==================================================================
//   >>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<
//   ------------------------------------------------------------------
//   Copyright (c) 2006-2011 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED 
//   ------------------------------------------------------------------
//
//   IMPORTANT: THIS FILE IS AUTO-GENERATED BY THE LATTICEMICO SYSTEM.
//
//   Permission:
//
//      Lattice Semiconductor grants permission to use this code
//      pursuant to the terms of the Lattice Semiconductor Corporation
//      Open Source License Agreement.  
//
//   Disclaimer:
//
//      Lattice Semiconductor provides no warranty regarding the use or
//      functionality of this code. It is the user's responsibility to
//      verify the user’s design for consistency and functionality through
//      the use of formal verification methods.
//
//   --------------------------------------------------------------------
//
//                  Lattice Semiconductor Corporation
//                  5555 NE Moore Court
//                  Hillsboro, OR 97214
//                  U.S.A
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                         503-286-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
//   --------------------------------------------------------------------
//                         FILE DETAILS
// Project          : Master PassThrough for LM32
// File             : mstr_passthru.v
// Title            : Master PassThrough 
// Dependencies     : system_conf.v
// Description      : Implements the logic to interface external master with 
//                    Wishbone bus.
// =============================================================================
//                        REVISION HISTORY
// Version          : 3.0
// Mod. Date        : Jun 16, 2008
// Changes Made     : Initial Creation
// =============================================================================

`include "system_conf.v"
module mstr_passthru 
  #(parameter M_WB_ADR_WIDTH = 32,
    parameter M_WB_DAT_WIDTH = 32
    )
   (
    // wishbone master signals
    output [M_WB_ADR_WIDTH-1:0] M_ADR_O,
    output [M_WB_DAT_WIDTH-1:0] M_DAT_O,
    output M_WE_O,
    output [M_WB_DAT_WIDTH/8-1:0] M_SEL_O,
    output M_STB_O,
    output M_CYC_O,
    output M_LOCK_O,
    output [2:0] M_CTI_O,
    output [1:0] M_BTE_O,
    input [M_WB_DAT_WIDTH-1:0] M_DAT_I,
    input M_ACK_I,
    input M_ERR_I,
    input M_RTY_I,
    
    // external signals
    input [M_WB_ADR_WIDTH-1:0] mstr_adr,
    input [M_WB_DAT_WIDTH-1:0] mstr_data_to_slv,
    input mstr_we,
    input mstr_stb,
    input mstr_cyc,
    input mstr_lock,
    input [2:0] mstr_cti,
    input [M_WB_DAT_WIDTH/8-1:0] mstr_sel,
    input [1:0] mstr_bte,
    output clk,
    output rst,
    output [M_WB_ADR_WIDTH-1:0] mstr_data_from_slv,
    output mstr_ack_from_slv,
    output mstr_rty_from_slv,
    output mstr_err_from_slv,
    
    input CLK_I,
    input RST_I
    );
   
   // Instantiate the open cores module
   dummy 
   #(.M_WB_ADR_WIDTH (M_WB_ADR_WIDTH),
     .M_WB_DAT_WIDTH (M_WB_DAT_WIDTH))
   instantiate_dummy 
     (        
	      // Connect Wishbone master
	      .m_ADR_O(M_ADR_O),
	      .m_DAT_O(M_DAT_O),
	      .m_WE_O(M_WE_O),
	      .m_SEL_O(M_SEL_O),
	      .m_STB_O(M_STB_O),
	      .m_CYC_O(M_CYC_O),
	      .m_LOCK_O(M_LOCK_O),
	      .m_CTI_O(M_CTI_O),
	      .m_BTE_O(M_BTE_O),
	      .m_DAT_I(M_DAT_I),
	      .m_ACK_I(M_ACK_I),
	      .m_ERR_I(M_ERR_I),
	      .m_RTY_I(M_RTY_I),
	      
	      // Connect External signals
	      .mstr_adr(mstr_adr),
	      .mstr_data_to_slv(mstr_data_to_slv),
	      .mstr_we(mstr_we),
	      .mstr_stb(mstr_stb),
	      .mstr_cyc(mstr_cyc),
	      .mstr_lock(mstr_lock),
	      .mstr_cti(mstr_cti),
	      .mstr_sel(mstr_sel),
	      .mstr_bte(mstr_bte),
	      .clk(clk),
	      .rst(rst),
	      .mstr_data_from_slv(mstr_data_from_slv),
	      .mstr_ack_from_slv(mstr_ack_from_slv),
	      .mstr_rty_from_slv(mstr_rty_from_slv),
	      .mstr_err_from_slv(mstr_err_from_slv),
	      
	      .CLK_I(CLK_I),
	      .RST_I(RST_I));
   
endmodule

